<Page x:Class="QuizGenerator.View.Views.Pages.QuizPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:comp="clr-namespace:QuizGenerator.View.Components"
      xmlns:vms="clr-namespace:QuizGenerator.ViewModel.ViewModels.Pages;assembly=QuizGenerator.ViewModel"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:QuizGenerator.View.Views.Pages"
      xmlns:converters="clr-namespace:QuizGenerator.View.Converters"
      xmlns:models="clr-namespace:QuizGenerator.Model.Entities;assembly=QuizGenerator.Model"
      xmlns:modelsViewModel="clr-namespace:QuizGenerator.ViewModel.ViewModels.Models;assembly=QuizGenerator.ViewModel"
      xmlns:dd="urn:gong-wpf-dragdrop"
      xmlns:viewModels="clr-namespace:QuizGenerator.View.Models"
      FocusManager.IsFocusScope="True"
      mc:Ignorable="d"
      d:DataContext="{d:DesignInstance vms:QuizPageViewModel}"
      Title="Quiz" d:DesignWidth="517.601">
    <Page.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveQuizCommand}"/>
    </Page.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadQuizCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding LoadQuizCommand.CancelCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <comp:SavingSplash Visibility="{Binding IsNowSaving, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Grid.Row="0"
                           d:Visibility="Collapsed"/>

        <ProgressBar d:Visibility="Collapsed"
                     Grid.Row="0"
                     Visibility="{Binding LoadQuizCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Style="{StaticResource SpinnerProgressBarStyle}"/>

        <Grid Margin="10"
              Grid.Row="0"
              Visibility="{Binding LoadQuizCommand.Execution.IsCompleted, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <Label Style="{StaticResource HeaderLabelStyle}"
                       Grid.Column="0"
                       Grid.Row="0"
                       Content="Quiz name"/>

                <comp:ExtendedTextBox Grid.Column="1"
                                      Grid.Row="0"
                                      Margin="10 0"
                                      Text="{Binding Quiz.Name, UpdateSourceTrigger=PropertyChanged}"
                                      Placeholder="Type name here"/>

                <Label Style="{StaticResource HeaderLabelStyle}"
                       Grid.Row="1"
                       Content="Time limit"/>

                <CheckBox Grid.Row="1"
                          d:IsChecked="True"
                          IsChecked="{Binding Quiz.IsNeedInterval}"
                          x:Name="TimeLimitCheckBox"
                          Margin="10 0"
                          HorizontalAlignment="Left"
                          Grid.Column="1"/>

                <Label Content="Time"
                       Grid.Row="2"
                       Grid.Column="0"
                       Visibility="{Binding ElementName=TimeLimitCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Style="{StaticResource HeaderLabelStyle}"/>

                <comp:ExtendedTextBox Placeholder="12:34"
                                      Margin="10 0"
                                      Text="{Binding Quiz.Interval, UpdateSourceTrigger=LostFocus}"
                                      Visibility="{Binding ElementName=TimeLimitCheckBox, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Grid.Row="2"
                                      Grid.Column="1"/>

            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <comp:IconButton ToolTip="Delete quiz"
                                 Command="{Binding DeleteQuizCommand}"
                                 MaterialIcon="Trash"
                                 Margin="0 0 10 0"/>

                <Label Grid.Column="1"
                       VerticalAlignment="Stretch"
                       Style="{StaticResource BodyLabelStyle}"
                       Content="{Binding Quiz.Questions.Count}"
                       d:Content="1"
                       ContentStringFormat="Question count: {0}"/>

                <StackPanel HorizontalAlignment="Right"
                            Orientation="Horizontal"
                            Grid.Column="1">
                    <StackPanel.Resources>
                        <ObjectDataProvider MethodName="GetValues"
                                            ObjectType="{x:Type sys:Enum}"
                                            x:Key="QuestionTypeEnum">
                            <ObjectDataProvider.MethodParameters>
                                <x:Type Type="{x:Type models:QuestionType}"/>
                            </ObjectDataProvider.MethodParameters>
                        </ObjectDataProvider>

                        <viewModels:BindingProxy x:Key="Proxy" Data="{Binding}"/>
                    </StackPanel.Resources>

                    <comp:IconButton ToolTip="Add"
                                     MaterialIcon="Add"
                                     Margin="0 0 10 0"
                                     Command="{Binding OpenDropDownQuestionTypesCommand}"
                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                        <comp:IconButton.ContextMenu>
                            <ContextMenu Placement="MousePoint"
                                         ItemsSource="{Binding Source={StaticResource QuestionTypeEnum}}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MenuItemStyle}">
                                        <Setter Property="Header" Value="{Binding}" />
                                        <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.AddNewQuestionCommand}" />
                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </comp:IconButton.ContextMenu>
                    </comp:IconButton>

                    <comp:IconButton ToolTip="Start"
                                     MaterialIcon="Play"
                                     Command="{Binding StartQuizCommand}"/>
                </StackPanel>
            </Grid>

            <Label Content="No one question :("
                   Grid.Row="2"
                   VerticalAlignment="Stretch"
                   VerticalContentAlignment="Center"
                   HorizontalAlignment="Stretch"
                   HorizontalContentAlignment="Center"
                   d:Visibility="Collapsed"
                   Visibility="{Binding Quiz.Questions.Count, Converter={StaticResource IntToVisibilityConverter}, ConverterParameter=Invert}"
                   Style="{StaticResource HeaderLabelStyle}"/>

            <ScrollViewer x:Name="_scrollViewer"
                          Grid.Row="2"
                          HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto">
                <ScrollViewer.Resources>
                    <x:Array x:Key="AnswerDetailsDesignData"
                             Type="{x:Type modelsViewModel:AnswerDetailViewModel}">
                        <modelsViewModel:AnswerDetailViewModel Text="Green"/>
                        <modelsViewModel:AnswerDetailViewModel Text="Yellow"/>
                        <modelsViewModel:AnswerDetailViewModel Text="Blue"/>
                        <modelsViewModel:AnswerDetailViewModel Text="Red"/>
                    </x:Array>
                    <x:Array x:Key="QuestionDetailsDesignData"
                             Type="{x:Type modelsViewModel:QuestionDetailViewModel}">
                        <modelsViewModel:QuestionDetailViewModel Text="Favourite color?"
                                                                 AnswerDetails="{StaticResource AnswerDetailsDesignData}"/>
                    </x:Array>
                    <x:Array x:Key="QuestionsDesignData"
                             Type="{x:Type modelsViewModel:QuestionViewModel}">
                        <modelsViewModel:QuestionViewModel EvaluationPrice="1"
                                                           QuestionType="One"
                                                           ListNumber="1"
                                                           QuestionDetails="{StaticResource QuestionDetailsDesignData}"/>

                    </x:Array>
                </ScrollViewer.Resources>

                <ItemsControl ItemsSource="{Binding Quiz.Questions}"
                              Padding="0 5"
                              d:ItemsSource="{StaticResource QuestionsDesignData}"
                              dd:DragDrop.DropTargetScrollViewer="{Binding ElementName=_scrollViewer}"
                              dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdornerDataTemplate}"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True"
                              dd:DragDrop.DropHandler="{Binding}">
                    <ItemsControl.Resources>
                        <ResourceDictionary Source="/Styles/Animations/FadeInOpacityStoryboard.xaml"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <comp:QuestionEditCard Question="{Binding}"
                                                   DeleteCommand="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.DeleteQuestionCommand}"
                                                   EditCommand="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext.EditQuestionCommand}"
                                                   DeleteCommandParameter="{Binding}"
                                                   EditCommandParameter="{Binding}"
                                                   Margin="0 4 5 4"/>
                            <DataTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource FadeInOpacityStoryboard}"/>
                                </EventTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>


            <comp:IconButton VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             MaterialIcon="ContentSave"
                             Command="{Binding SaveQuizCommand}"
                             Content="Save"
                             Grid.Row="3"/>
        </Grid>
    </Grid>
</Page>
